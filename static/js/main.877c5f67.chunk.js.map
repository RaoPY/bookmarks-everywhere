{"version":3,"sources":["components/Signup.js","components/Login.js","components/Navbar.js","components/Bookmark.js","components/Bookmarks.js","components/AddBookmark.js","components/EditBookmark.js","components/MyAccount.js","App.js","index.js"],"names":["Signup","setRoute","document","title","id","type","placeholder","onClick","usernameSignup","getElementById","value","toLowerCase","passwordSignup","alert","fetch","then","res","json","usernames","includes","method","headers","body","JSON","stringify","username","password","bookmarks","catch","error","console","log","Login","setCurrentUser","usernameLogin","passwordLogin","isAuthenticated","Navbar","window","location","reload","Bookmark","bookmark","setUrlOfEditBookmark","a","url","className","src","alt","style","verticalAlign","href","target","rel","margin","width","editBtn","Bookmarks","currentUserBookmarks","currentUser","background","map","index","AddBookmark","event","preventDefault","bookmarkUrl","bookmarkTitle","newBookmark","newBookmarks","onSubmit","required","EditBookmark","urlOfEditBookmark","bookmarkUrlEdit","bookmarkTitleEdit","editedBookmark","filter","singleBookmark","MyAccount","usernameFirstChar","toUpperCase","newUsername","confirmChange","prompt","newPassword","App","useState","setCurrentUserBookmarks","route","useEffect","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.877c5f67.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Signup.css\";\r\n\r\nfunction Signup({ setRoute }) {\r\n    document.title = \"Bookmarks Everywhere | Sign up\";\r\n\r\n    function signupBtn() {\r\n        const usernameSignup = document.getElementById(\"usernameInputSignup\").value.toLowerCase();\r\n        const passwordSignup = document.getElementById(\"passwordInputSignup\").value;\r\n\r\n        if (usernameSignup === \"\" || passwordSignup === \"\") {\r\n            alert(\"Enter username/password...\");\r\n        } else {\r\n            fetch(\"https://bookmarks-everywhere.cyclic.cloud/usernames\")\r\n                .then(res => res.json())\r\n                .then(usernames => {\r\n                    if (usernames.includes(usernameSignup)) {\r\n                        alert(\"Username already in use. Try another one...\");\r\n                    } else {\r\n                        fetch(\"https://bookmarks-everywhere.cyclic.cloud/signup\", {\r\n                          method: \"POST\",\r\n                          headers: { \"Content-Type\": \"application/json\" },\r\n                          body: JSON.stringify({ username: usernameSignup, password: passwordSignup, bookmarks: [] })\r\n                        });\r\n                \r\n                        alert(\"Account created. Now you can proceed to login.\");\r\n                        setRoute(\"login\");\r\n                    }\r\n                })\r\n                .catch(error => console.log(error));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"signupContainer\">\r\n            <h1>Sign up</h1>\r\n            <input type=\"text\" placeholder=\"Username\" id=\"usernameInputSignup\" />\r\n            <input type=\"password\" placeholder=\"Password\" id=\"passwordInputSignup\" />\r\n            <button onClick={signupBtn}>Sign up</button>\r\n            <p onClick={() => setRoute(\"login\")}>Go to log in</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;","import React from \"react\";\r\nimport \"./Login.css\";\r\n\r\nfunction Login({ setCurrentUser, setRoute }) {\r\n    document.title = \"Bookmarks Everywhere | Log in\";\r\n\r\n    function loginBtn() {\r\n        const usernameLogin = document.getElementById(\"usernameInputLogin\").value.toLowerCase();\r\n        const passwordLogin = document.getElementById(\"passwordInputLogin\").value;\r\n\r\n        if (usernameLogin === \"\" || passwordLogin === \"\") {\r\n            alert(\"Enter username/password...\");\r\n        } else {\r\n            fetch(\"https://bookmarks-everywhere.cyclic.cloud/login\", {\r\n              method: \"POST\",\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify({ usernameLogin, passwordLogin })\r\n            })\r\n                .then(res => res.json())\r\n                .then(isAuthenticated => {\r\n                    if (isAuthenticated === null) {\r\n                        alert(\"No account found with this username...\");\r\n                    }\r\n                    else if (isAuthenticated === true) {\r\n                        setCurrentUser(usernameLogin);\r\n                        setRoute(\"myBookmarks\");\r\n                    }\r\n                    else {\r\n                        alert(\"Incorrect password.\");\r\n                    }\r\n                })\r\n                .catch(error => console.log(error));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"loginContainer\">\r\n            <h1>Log in</h1>\r\n            <input type=\"text\" placeholder=\"Username\" id=\"usernameInputLogin\" />\r\n            <input type=\"password\" placeholder=\"Password\" id=\"passwordInputLogin\" />\r\n            <button onClick={loginBtn}>Log in</button>\r\n            <p onClick={() => setRoute(\"signup\")}>Go to sign up</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar({ setRoute }) {\r\n    return (\r\n        <div id=\"navbarContainer\">\r\n            <span onClick={() => setRoute(\"myBookmarks\")}>Home</span>\r\n            <span onClick={() => setRoute(\"myAccount\")}>My Account</span>\r\n            <span onClick={() => window.location.reload()} id=\"logoutBtn\">Log out</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport \"./Bookmark.css\";\r\n\r\nfunction Bookmark({ bookmark, setUrlOfEditBookmark, setRoute }) {\r\n    async function editBtn(bookmark) {\r\n        await setRoute(\"editBookmark\");\r\n        setUrlOfEditBookmark(bookmark.url);\r\n        document.getElementById(\"bookmarkUrlEdit\").value = bookmark.url;\r\n        document.getElementById(\"bookmarkTitleEdit\").value = bookmark.title;\r\n    }\r\n\r\n    return (\r\n        <div className=\"bookmark\">\r\n            <h3>{bookmark.title}</h3>\r\n            <img src={`https://www.google.com/s2/favicons?domain=${bookmark.url}`} alt=\"\" style={{verticalAlign: \"middle\"}} />\r\n            <a href={bookmark.url} target=\"_blank\" rel=\"noreferrer\">{bookmark.url}</a>\r\n            <hr className=\"line\" style={{margin: \"15px auto\", width: \"90%\"}} />\r\n            <button onClick={() => editBtn(bookmark)}>Edit</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Bookmark;","import React from \"react\";\r\nimport Bookmark from \"./Bookmark\";\r\nimport \"./Bookmarks.css\";\r\n\r\nfunction Bookmarks({ currentUserBookmarks, currentUser, setUrlOfEditBookmark, setRoute }) {\r\n    document.title = \"Bookmarks Everywhere | My Bookmarks\";\r\n    document.body.style.background = \"#000000\";\r\n\r\n    return (\r\n        <div id=\"bookmarksContainer\">\r\n            <p>Hey, <b>{currentUser}</b>! Here are your bookmarks</p>\r\n            {currentUserBookmarks.map((bookmark, index) => {\r\n                return (\r\n                    <Bookmark bookmark={bookmark} setUrlOfEditBookmark={setUrlOfEditBookmark} setRoute={setRoute} key={index} />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Bookmarks;","import React from \"react\";\r\nimport \"./AddBookmark.css\";\r\n\r\nfunction AddBookmark({ currentUserBookmarks, currentUser, setRoute }) {\r\n    document.title = \"Bookmarks Everywhere | Add Bookmark\";\r\n    document.body.style.background = \"#000000\";\r\n\r\n    async function addBookmarkFormSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const bookmarkUrl = document.getElementById(\"bookmarkUrl\").value;\r\n        const bookmarkTitle = document.getElementById(\"bookmarkTitle\").value;\r\n\r\n        const newBookmark = { url: bookmarkUrl, title: bookmarkTitle }\r\n        const newBookmarks = [...currentUserBookmarks, newBookmark];\r\n\r\n        await fetch(`https://bookmarks-everywhere.cyclic.cloud/bookmark/add/${currentUser}`, {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ bookmarks: newBookmarks })\r\n        });\r\n\r\n        setRoute(\"myBookmarks\");\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={addBookmarkFormSubmit} id=\"addBookmarkForm\">\r\n            <input type=\"url\" placeholder=\"Enter URL\" id=\"bookmarkUrl\" required /> <br />\r\n            <input type=\"text\" placeholder=\"Enter Title\" id=\"bookmarkTitle\" /> <br />\r\n            <button type=\"submit\">Add Bookmark</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AddBookmark;","import React from \"react\";\r\nimport \"./EditBookmark.css\";\r\n\r\nfunction EditBookmark({ currentUserBookmarks, urlOfEditBookmark, currentUser, setRoute }) {\r\n    document.title = \"Bookmarks Everywhere | Edit Bookmark\";\r\n\r\n    async function editBookmarkFormSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const bookmarkUrlEdit = document.getElementById(\"bookmarkUrlEdit\").value;\r\n        const bookmarkTitleEdit = document.getElementById(\"bookmarkTitleEdit\").value;\r\n\r\n        const editedBookmark = { url: bookmarkUrlEdit, title: bookmarkTitleEdit }\r\n        const newBookmarks = currentUserBookmarks.map(bookmark => {\r\n            if (bookmark.url === urlOfEditBookmark) {\r\n                return editedBookmark;\r\n            } else {\r\n                return bookmark;\r\n            }\r\n        });\r\n\r\n        await fetch(`https://bookmarks-everywhere.cyclic.cloud/bookmark/edit/${currentUser}`, {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ bookmarks: newBookmarks })\r\n        });\r\n\r\n        setRoute(\"myBookmarks\");\r\n    }\r\n\r\n    async function deleteBtn() {\r\n        const newBookmarks = currentUserBookmarks.filter(singleBookmark => singleBookmark.url !== urlOfEditBookmark);\r\n        await fetch(`https://bookmarks-everywhere.cyclic.cloud/bookmark/delete/${currentUser}`, {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ bookmarks: newBookmarks })\r\n        });\r\n\r\n        setRoute(\"myBookmarks\");\r\n    }\r\n\r\n    return (\r\n        <div id=\"editBookmarkContainer\">\r\n            <h1>Edit Bookmark</h1>\r\n            <form onSubmit={editBookmarkFormSubmit}>\r\n                <input type=\"url\" placeholder=\"New URL\" id=\"bookmarkUrlEdit\" required /> <br />\r\n                <input type=\"text\" placeholder=\"New Title\" id=\"bookmarkTitleEdit\" /> <br />\r\n                <button id=\"saveEditBtn\">Save Changes</button>\r\n            </form>\r\n            <button onClick={deleteBtn} id=\"deleteBtn\">Delete Bookmark</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditBookmark;","import React from \"react\";\r\nimport \"./MyAccount.css\";\r\n\r\nfunction MyAccount({ currentUser }) {\r\n    document.title = \"Bookmarks Everywhere | My Account\";\r\n    document.body.style.background = \"#000000\";\r\n\r\n    function deleteAccountBtn() {\r\n        const usernameConfirm = prompt(`Type your username \"${currentUser}\" to confirm: `);\r\n        if (usernameConfirm === currentUser) {\r\n            fetch(`https://bookmarks-everywhere.cyclic.cloud/user/delete/${currentUser}`, { method: \"DELETE\" });\r\n            alert(\"Account deleted.\");\r\n            // setCurrentUser(\"\");\r\n            // setCurrentUserBookmarks([]);\r\n            // setRoute(\"login\");\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    function changeUsernameBtn() {\r\n        const newUsername = document.getElementById(\"newUsername\").value.toLowerCase();\r\n        if (newUsername === \"\") {\r\n            alert(\"Enter new username...\");\r\n        } else {\r\n            fetch(\"https://bookmarks-everywhere.cyclic.cloud/usernames\")\r\n                .then(res => res.json())\r\n                .then(usernames => {\r\n                    if (usernames.includes(newUsername)) {\r\n                        alert(\"Username already in use. Try another one...\");\r\n                    } else {\r\n                        const confirmChange = prompt('Type \"y\" to confirm: ');\r\n                        if (confirmChange === \"y\" || confirmChange === \"Y\") {\r\n                            fetch(`https://bookmarks-everywhere.cyclic.cloud/user/update/username/${currentUser}`, {\r\n                                method: \"PUT\",\r\n                                headers: { \"Content-Type\": \"application/json\" },\r\n                                body: JSON.stringify({ username: newUsername })\r\n                            });\r\n\r\n                            alert(\"Username changed. Proceed to login with your new username.\");\r\n                            window.location.reload();\r\n                        }\r\n                    }\r\n                })\r\n                .catch(error => console.log(error));\r\n        }\r\n    }\r\n    \r\n    function changePasswordBtn() {\r\n        const newPassword = document.getElementById(\"newPassword\").value;\r\n        if (newPassword === \"\") {\r\n            alert(\"Enter new password...\");\r\n        } else {\r\n            const confirmChange = prompt('Type \"y\" to confirm: ');\r\n            if (confirmChange === \"y\" || confirmChange === \"Y\") {\r\n                fetch(`https://bookmarks-everywhere.cyclic.cloud/user/update/password/${currentUser}`, {\r\n                    method: \"PUT\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ password: newPassword })\r\n                });\r\n    \r\n                alert(\"Password changed. Proceed to login with your new password.\");\r\n                window.location.reload();\r\n            }\r\n        }\r\n    }\r\n\r\n    const usernameFirstChar = currentUser[0];\r\n\r\n    return (\r\n        <div id=\"myAccountContainer\">\r\n            <div id=\"profilePicture\">{usernameFirstChar.toUpperCase()}</div>\r\n            <h1>{currentUser}</h1>\r\n            <hr className=\"line\" />\r\n            <h2>Account Settings</h2>\r\n            <input type=\"text\" placeholder=\"New username\" id=\"newUsername\" />\r\n            <button onClick={changeUsernameBtn} className=\"changeBtn\">Change username</button> <br />\r\n            <input type=\"text\" placeholder=\"New password\" id=\"newPassword\" />\r\n            <button onClick={changePasswordBtn} className=\"changeBtn\">Change password</button> <br />\r\n            <button onClick={deleteAccountBtn} id=\"deleteAccountBtn\">Delete account</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyAccount;","import React, { useState, useEffect } from \"react\";\n\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport Navbar from \"./components/Navbar\";\nimport Bookmarks from \"./components/Bookmarks\";\nimport AddBookmark from \"./components/AddBookmark\";\nimport EditBookmark from \"./components/EditBookmark\";\nimport MyAccount from \"./components/MyAccount\";\n\nimport './App.css';\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [currentUserBookmarks, setCurrentUserBookmarks] = useState([]);\n  const [urlOfEditBookmark, setUrlOfEditBookmark] = useState(\"\");\n  const [route, setRoute] = useState(\"login\");\n\n  useEffect(() => {\n    if (currentUser !== \"\" && route === \"myBookmarks\") {\n      fetch(`https://bookmarks-everywhere.cyclic.cloud/bookmark/get/${currentUser}`)\n        .then(res => res.json())\n        .then(bookmarks => setCurrentUserBookmarks(bookmarks))\n        .catch(error => console.log(error));\n    }\n  }, [currentUser, route]);\n\n  if (route === \"login\") {\n    return (\n      <Login setCurrentUser={setCurrentUser} setRoute={setRoute} />\n    );\n  }\n\n  else if (route === \"signup\") {\n    return (\n      <Signup setRoute={setRoute} />\n    );\n  }\n\n  else if (route === \"myBookmarks\") {\n    return (\n      <>\n        <Navbar setRoute={setRoute} />\n        <div id=\"addBookmarkBtnContainer\">\n          <button onClick={() => setRoute(\"addBookmark\")} id=\"addBookmarkBtn\">New Bookmark</button>\n        </div>\n        <Bookmarks currentUserBookmarks={currentUserBookmarks} currentUser={currentUser} setUrlOfEditBookmark={setUrlOfEditBookmark} setRoute={setRoute} />\n      </>\n    );\n  }\n\n  else if (route === \"addBookmark\") {\n    return (\n      <>\n        <Navbar setRoute={setRoute} />\n        <AddBookmark currentUserBookmarks={currentUserBookmarks} currentUser={currentUser} setRoute={setRoute} />\n      </>\n    );\n  }\n\n  else if (route === \"editBookmark\") {\n    return (\n      <>\n        <Navbar setRoute={setRoute} />\n        <EditBookmark currentUserBookmarks={currentUserBookmarks} currentUser={currentUser} urlOfEditBookmark={urlOfEditBookmark} setRoute={setRoute} />\n      </>\n    );\n  }\n\n  else if (route === \"myAccount\") {\n    return (\n      <>\n        <Navbar setRoute={setRoute} />\n        <MyAccount currentUser={currentUser} />\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}